version: '3.8'
services:
  database:
    container_name: db-pagamento-valhalla-kitchen
    image: postgres:latest
    restart: unless-stopped
    ports:
      - "5433:5432"
    user: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
    expose:
      - 5432
    volumes:
      - ./docker/01-create_db.sql:/docker-entrypoint-initdb.d/01-create_db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5


  api:
    container_name: api-pagamento-valhalla-kitchen
    image: openjdk:latest
    ports:
      - "8081:8080"
    environment:
      PORT: ${PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      AWS_SECRET_KEY: ${AWS_SECRET_KEY}
      AWS_SQS_ENDPOINT: ${AWS_SQS_ENDPOINT}
      QUEUE_PEDIDO_GERADO: ${QUEUE_PEDIDO_GERADO}
      QUEUE_RETORNO_PAGAMENTO: ${QUEUE_RETORNO_PAGAMENTO}
    volumes:
      - ./docker/pagamento-valhalla-kitchen-1.0.jar:/app/pagamento-valhalla-kitchen-1.0.jar
    command:
      ["java", "-jar", "/app/pagamento-valhalla-kitchen-1.0.jar"]
    depends_on:
      database:
        condition: service_healthy